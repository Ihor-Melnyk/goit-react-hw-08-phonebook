{"version":3,"file":"static/js/ContactsView.cec37fa0.chunk.js","mappings":"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","sources":["components/Icon/IconEdit.jsx","components/BasicExample/BasicExample.js","components/Form/Form.jsx","components/FormEdit/FormEdit.jsx","components/modal/modal.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.scss?1c6f","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/Contact.module.scss?b54f","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView.jsx"],"sourcesContent":["import React from 'react';\nconst IconEdit = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\"\n      />\n    </svg>\n  );\n};\n\nexport default IconEdit;\n","import React, { useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Toast from 'react-bootstrap/Toast';\n\nfunction BasicExample() {\n  const [showA, setShowA] = useState(true);\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n    <Row>\n      <Col md={6} className=\"mb-2\">\n        <Toast show={showA} onClose={toggleShowA}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded me-2\"\n              alt=\"\"\n            />\n            <strong className=\"me-auto\">PhoneBook</strong>\n          </Toast.Header>\n          <Toast.Body>This contact is already in the PhoneBook!</Toast.Body>\n        </Toast>\n      </Col>\n    </Row>\n  );\n}\n\nexport default BasicExample;\n","import BasicExample from 'components/BasicExample/BasicExample';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useCreateContactMutation } from 'redux/contacts/contactApi';\n\nexport default function ContactForm({ contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [state, setState] = useState(false);\n  const [createContact] = useCreateContactMutation();\n\n  // console.log(contacts);\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const NewContact = {\n      name: name,\n      number: number,\n    };\n\n    const normalizedName = NewContact.name.toLowerCase();\n    const checkedForName = contacts.find(\n      contact => normalizedName === contact.name.toLowerCase()\n    );\n\n    if (checkedForName) {\n      setState(!state);\n      return;\n    }\n\n    createContact(NewContact);\n    reset();\n  };\n\n  const reset = e => {\n    setName('');\n    setNumber('');\n    setState(false);\n  };\n\n  return (\n    <Container\n      style={{\n        marginTop: '20px',\n        maxWidth: '600px',\n        border: 'solid 1px black',\n        padding: '30px',\n        borderRadius: '15px',\n      }}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\" variant=\"primary\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n      {state && <BasicExample />}\n    </Container>\n  );\n}\n","import BasicExample from 'components/BasicExample/BasicExample';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useEditContactMutation } from 'redux/contacts/contactApi';\n\nexport default function FormEdit({ editContact, contacts }) {\n  const { id, name: contactName, number: contactNumber } = editContact;\n  const [name, setName] = useState(() => contactName);\n  const [number, setNumber] = useState(contactNumber);\n  const [state, setState] = useState(false);\n  const [editContactName] = useEditContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const NewContact = {\n      name: name,\n      number: number,\n      id: id,\n    };\n\n    const normalizedName = NewContact.name.toLowerCase();\n    const checkedForName = contacts.find(\n      contact => normalizedName === contact.name.toLowerCase()\n    );\n\n    if (checkedForName) {\n      setState(!state);\n      return;\n    }\n\n    editContactName(NewContact);\n  };\n\n  return (\n    <Container\n      style={{\n        marginTop: '20px',\n        maxWidth: '600px',\n        border: 'solid 1px black',\n        padding: '30px',\n        borderRadius: '15px',\n      }}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\" variant=\"primary\" type=\"submit\">\n          Edit contact\n        </Button>\n      </Form>\n      {state && <BasicExample />}\n    </Container>\n  );\n}\n","import Form from '../Form/Form';\n// import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport FormEdit from '../FormEdit/FormEdit';\n\nfunction Example({ editContact, setShowModal, setEditContact, contacts }) {\n  const handleClose = () => {\n    setShowModal(false);\n    if (editContact) {\n      setEditContact('');\n    }\n  };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   // handleClose();\n  // };\n\n  return (\n    <>\n      <Modal\n        show={true}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title style={{ marginLeft: 'auto' }}>\n            {editContact ? 'Edit contact' : 'Add Contact'}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {editContact ? (\n            <FormEdit editContact={editContact} contacts={contacts} />\n          ) : (\n            <Form contacts={contacts} />\n          )}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default Example;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__3J6JV\",\"btn\":\"ContactItem_btn__nOlYy\"};","// import PropTypes from 'prop-types';\nimport IconEdit from 'components/Icon/IconEdit';\nimport Example from 'components/modal/modal';\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactApi';\nimport style from './ContactItem.module.scss';\n\nconst ContactItem = ({\n  id,\n  name,\n  number,\n  showModal,\n  setShowModal,\n  contacts,\n}) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const [editContact, setEditContact] = useState('');\n\n  const handleEditContact = () => {\n    const newCont = {\n      name: name,\n      number: number,\n      id: id,\n    };\n\n    setEditContact(newCont);\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <li\n        className={style.item}\n        style={{\n          border: '1px solid black',\n          alignItems: 'center',\n          padding: '15px',\n          borderRadius: '10px',\n        }}\n      >\n        <p style={{ margin: '0' }}>\n          {name}: <span>{number}</span>\n        </p>\n        <div\n          style={{\n            display: 'flex',\n            gap: '10px',\n          }}\n        >\n          <button\n            type=\"button\"\n            display=\"flex\"\n            className={style.btn}\n            style={{\n              width: '35px',\n              height: '35px',\n              borderRadius: '50%',\n              backgroundColor: 'blue ',\n              color: 'white',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            onClick={handleEditContact}\n          >\n            <IconEdit\n              style={{\n                display: 'inline-block',\n                width: '18px',\n                height: '18px',\n                stroke: 'currentColor',\n                fill: 'currentColor',\n                border: '1px solid red',\n              }}\n            />\n          </button>\n          <button\n            type=\"button\"\n            style={{\n              width: '35px',\n              height: '35px',\n              borderRadius: '50%',\n              backgroundColor: 'red',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            className={style.btn}\n            onClick={() => deleteContact(id)}\n          >\n            <div\n              style={{ width: '18px', height: '3px', backgroundColor: 'white' }}\n            ></div>\n          </button>\n        </div>\n      </li>\n      {showModal && editContact.name && (\n        <Example\n          setShowModal={setShowModal}\n          editContact={editContact}\n          setEditContact={setEditContact}\n          contacts={contacts}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactItem;\n\n// ContactItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   phone: PropTypes.string.isRequired,\n//   onDelete: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contact_list__ZYtad\"};","import ContactItem from '../ContactItem/ContactItem';\nimport Container from 'react-bootstrap/Container';\nimport style from './Contact.module.scss';\n\nconst ContactList = ({ contacts, showModal, setShowModal }) => {\n  return (\n    <Container style={{ maxWidth: '500px', marginTop: '30px' }}>\n      <ul className={style.list}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              contacts={contacts}\n              showModal={showModal}\n              setShowModal={setShowModal}\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            />\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\nexport default ContactList;\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//       phone: PropTypes.string.isRequired,\n//     })\n//   ),\n//   onDelete: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { IoIosSearch } from 'react-icons/io';\n\nimport Form from 'react-bootstrap/Form';\nimport { Container } from 'react-bootstrap';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <Container style={{ maxWidth: '500px' }}>\n      <Form.Label>{<IoIosSearch />} Find by name</Form.Label>\n      <Form.Control\n        size=\"lg\"\n        type=\"text\"\n        value={filter}\n        placeholder=\"find contact\"\n        onChange={onChange}\n      />\n    </Container>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { useFetchContactsQuery } from '../redux/contacts/contactApi';\nimport Example from '../components/modal/modal';\n\nexport default function ContactsView() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [filter, setFilter] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const toggleShowModal = () => setShowModal(!showModal);\n\n  const handleAddContact = () => {\n    toggleShowModal();\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  function getFilterContact() {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  return (\n    <Container>\n      <Button\n        type=\"button\"\n        style={{\n          width: '60px',\n          height: '60px',\n          margin: '0',\n          border: 'none',\n          borderRadius: '50%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: '#fff',\n          font: 'inherit',\n          backgroundColor: '#4caf50',\n          cursor: 'pointer',\n          fontSize: '50px',\n          paddingBottom: '10px',\n        }}\n        onClick={handleAddContact}\n      >\n        +\n      </Button>\n      {showModal && (\n        <Example\n          onClose={toggleShowModal}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          contacts={contacts}\n        />\n      )}\n      <Filter filter={filter} onChange={changeFilter} />\n      {contacts && (\n        <ContactList\n          showModal={showModal}\n          setShowModal={setShowModal}\n          contacts={getFilterContact()}\n        />\n      )}\n    </Container>\n  );\n}\n"],"names":["xmlns","fill","viewBox","strokeWidth","stroke","className","strokeLinecap","strokeLinejoin","d","useState","showA","setShowA","Row","Col","md","Toast","show","onClose","src","alt","ContactForm","contacts","name","setName","number","setNumber","state","setState","useCreateContactMutation","createContact","handleChange","e","target","value","reset","Container","style","marginTop","maxWidth","border","padding","borderRadius","Form","onSubmit","preventDefault","NewContact","normalizedName","toLowerCase","find","contact","controlId","size","type","placeholder","onChange","pattern","title","required","Button","variant","FormEdit","editContact","id","contactName","contactNumber","useEditContactMutation","editContactName","setShowModal","setEditContact","Modal","onHide","backdrop","keyboard","closeButton","marginLeft","showModal","useDeleteContactMutation","deleteContact","alignItems","margin","display","gap","width","height","backgroundColor","color","justifyContent","onClick","map","filter","ContactsView","useFetchContactsQuery","data","setFilter","toggleShowModal","font","cursor","fontSize","paddingBottom","currentTarget","normalizedFilter","includes","getFilterContact"],"sourceRoot":""}