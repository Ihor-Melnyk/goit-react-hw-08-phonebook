{"version":3,"file":"static/js/AppBar.cdd8961b.chunk.js","mappings":"yTAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qJ,6BCqE1B,MA9DA,WACE,IAAQE,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCH,KACR,GAAiBI,EAAAA,EAAAA,MAAVC,GAAP,eACQC,GAAUL,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAArCG,MACR,GAA0BC,EAAAA,EAAAA,UAAS,QAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,iCACE,SAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAS,OAAQC,OAAO,KAA1C,UACE,UAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACE,SAACL,EAAA,QAAD,CAAcM,GAAG,IAAjB,wBACA,SAACN,EAAA,SAAD,CAAe,gBAAc,kBAC7B,UAACA,EAAA,WAAD,CAAiBO,GAAG,eAApB,WACE,UAACC,EAAA,EAAD,CAAKC,UAAU,uBAAuBC,cAAY,EAAlD,WACE,SAACvB,EAAD,CAAesB,UAAU,iBAAiBH,GAAG,IAA7C,kBAGCV,GACC,SAACT,EAAD,CAAesB,UAAU,iBAAiBH,GAAG,YAA7C,uBAIA,iCACE,SAACnB,EAAD,CAAesB,UAAU,iBAAiBH,GAAG,YAA7C,uBAGA,SAACnB,EAAD,CAAesB,UAAU,iBAAiBH,GAAG,SAA7C,yBAMLhB,IACC,iCACE,SAAC,IAAD,CACEqB,SArCI,WAClBZ,GAAS,SAAAa,GAAI,MAAc,UAATA,EAAmB,OAAS,YAqChCC,QAAmB,SAAVf,KAEX,UAACgB,EAAA,EAAD,CAAOb,GAAG,OAAV,WACE,SAAC,MAAD,IADF,aAC0BX,MAE1B,SAACyB,EAAA,EAAD,CAAQb,QAAQ,kBAAkBc,QAvCtB,WACxBrB,KAsCY,8BAQV,SAAC,KAAD","sources":["components/AppBar.styled.jsx","components/AppBar.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkHeader = styled(NavLink)`\n  margin-right: 10px;\n  text-decoration: none;\n  color: grey;\n  :hover,\n  :focus,\n  &.active {\n    color: white;\n  }\n`;\n","import { Button, Container, Nav, Navbar } from 'react-bootstrap';\nimport Badge from 'react-bootstrap/Badge';\nimport { FaRegUser } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { useLogOutUserMutation } from 'redux/auth/userApi';\nimport { NavLinkHeader } from './AppBar.styled';\nimport ReactSwitch from 'react-switch';\nimport { useState } from 'react';\n\nfunction AppBar() {\n  const { name } = useSelector(state => state.user);\n  const [logout] = useLogOutUserMutation();\n  const { token } = useSelector(state => state.user);\n  const [theme, setTheme] = useState('dark');\n\n  const toggleTheme = () => {\n    setTheme(curr => (curr === 'light' ? 'dark' : 'light'));\n  };\n\n  const handleLogoutClick = () => {\n    logout();\n  };\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant={'dark'} expand=\"md\">\n        <Container fluid>\n          <Navbar.Brand to=\"/\">PhoneBook</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\n          <Navbar.Collapse id=\"navbarScroll\">\n            <Nav className=\"me-auto my-2 my-lg-0\" navbarScroll>\n              <NavLinkHeader className=\"d-inline p-2  \" to=\"/\">\n                Home\n              </NavLinkHeader>\n              {token ? (\n                <NavLinkHeader className=\"d-inline p-2  \" to=\"/contacts\">\n                  Contacts\n                </NavLinkHeader>\n              ) : (\n                <>\n                  <NavLinkHeader className=\"d-inline p-2  \" to=\"/register\">\n                    Register\n                  </NavLinkHeader>\n                  <NavLinkHeader className=\"d-inline p-2  \" to=\"/login\">\n                    Login\n                  </NavLinkHeader>\n                </>\n              )}\n            </Nav>\n            {name && (\n              <>\n                <ReactSwitch\n                  onChange={toggleTheme}\n                  checked={theme === 'dark'}\n                />\n                <Badge bg=\"dark\">\n                  <FaRegUser /> Welcome, {name}\n                </Badge>\n                <Button variant=\"outline-success\" onClick={handleLogoutClick}>\n                  Exit\n                </Button>\n              </>\n            )}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Outlet />\n    </>\n  );\n}\n\nexport default AppBar;\n"],"names":["NavLinkHeader","styled","NavLink","name","useSelector","state","user","useLogOutUserMutation","logout","token","useState","theme","setTheme","Navbar","bg","variant","expand","Container","fluid","to","id","Nav","className","navbarScroll","onChange","curr","checked","Badge","Button","onClick"],"sourceRoot":""}