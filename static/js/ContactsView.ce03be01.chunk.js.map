{"version":3,"file":"static/js/ContactsView.ce03be01.chunk.js","mappings":"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","sources":["components/Icon/IconEdit.jsx","components/Message/Message.jsx","components/Form/FormAdd.Styled.jsx","components/Form/ContactAddForm.jsx","components/FormEdit/FormEdit.jsx","components/ModalContainer/ModalContainer.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView.styled.jsx","views/ContactsView.jsx"],"sourcesContent":["import React from 'react';\n\nconst IconEdit = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\"\n      />\n    </svg>\n  );\n};\n\nexport default IconEdit;\n","import React, { useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Toast from 'react-bootstrap/Toast';\n\nfunction Message() {\n  const [showA, setShowA] = useState(true);\n\n  const handleClose = () => {\n    setShowA(false);\n  };\n\n  return (\n    <Row>\n      <Col md={6} className=\"mb-2\">\n        <Toast show={showA} onClose={handleClose}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded me-2\"\n              alt=\"\"\n            />\n            <strong className=\"me-auto\">PhoneBook</strong>\n          </Toast.Header>\n          <Toast.Body>This contact is already in the PhoneBook!</Toast.Body>\n        </Toast>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Message;\n","import styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\n\nexport const ModalAddContactContent = styled(Container)`\n  margin-top: 20px;\n  max-width: 600px;\n  border: solid 1px black;\n  padding: 30px;\n  border-radius: 15px;\n`;\n","import Message from 'components/Message/Message';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { ModalAddContactContent } from './FormAdd.Styled';\nimport Form from 'react-bootstrap/Form';\nimport { useCreateContactMutation } from 'redux/contacts/contactApi';\n\nexport default function ContactAddForm({ contacts, onClose }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [state, setState] = useState(false);\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const NewContact = {\n      name: name,\n      number: number,\n    };\n\n    const normalizedName = NewContact.name.toLowerCase();\n    const checkedForName = contacts.find(\n      contact => normalizedName === contact.name.toLowerCase()\n    );\n\n    if (checkedForName) {\n      setState(!state);\n      return;\n    }\n\n    createContact(NewContact);\n    reset();\n    onClose();\n  };\n\n  const reset = e => {\n    setName('');\n    setNumber('');\n    setState(false);\n  };\n\n  return (\n    <ModalAddContactContent>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\" variant=\"primary\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n      {state && <Message />}\n    </ModalAddContactContent>\n  );\n}\n\nContactAddForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onClose: PropTypes.func.isRequired,\n};\n","import Message from 'components/Message/Message';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useEditContactMutation } from 'redux/contacts/contactApi';\nimport { ModalAddContactContent } from '../Form/FormAdd.Styled';\n\nexport default function FormEdit({ editContact, contacts, onClose }) {\n  const { id, name: contactName, number: contactNumber } = editContact;\n  const [name, setName] = useState(() => contactName);\n  const [number, setNumber] = useState(contactNumber);\n  const [state, setState] = useState(false);\n  const [editContactName] = useEditContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const NewContact = {\n      name: name,\n      number: number,\n      id: id,\n    };\n\n    const normalizedName = NewContact.name.toLowerCase();\n    const checkedForName = contacts.find(\n      contact => normalizedName === contact.name.toLowerCase()\n    );\n\n    if (checkedForName) {\n      setState(!state);\n      return;\n    }\n\n    editContactName(NewContact);\n    onClose();\n  };\n\n  return (\n    <ModalAddContactContent>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            size=\"lg\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Button size=\"lg\" variant=\"primary\" type=\"submit\">\n          Edit contact\n        </Button>\n      </Form>\n      {state && <Message />}\n    </ModalAddContactContent>\n  );\n}\n\nFormEdit.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  editContact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onClose: PropTypes.func.isRequired,\n};\n","import ContactAddForm from '../Form/ContactAddForm';\nimport Modal from 'react-bootstrap/Modal';\nimport FormEdit from '../FormEdit/FormEdit';\nimport PropTypes from 'prop-types';\n\nfunction ModalContainer({\n  editContact,\n  setEditContact,\n  setShowModal,\n  contacts,\n}) {\n  const handleClose = () => {\n    setShowModal(false);\n    if (editContact) {\n      setEditContact('');\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        show={true}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title style={{ marginLeft: 'auto' }}>\n            {editContact ? 'Edit contact' : 'Add Contact'}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {editContact ? (\n            <FormEdit\n              onClose={handleClose}\n              editContact={editContact}\n              contacts={contacts}\n            />\n          ) : (\n            <ContactAddForm contacts={contacts} onClose={handleClose} />\n          )}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalContainer;\n\nModalContainer.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  editContact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  setEditContact: PropTypes.func,\n  setShowModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 5px;\n  padding: 15px;\n  border: 1px solid black;\n  border-radius: 10px;\n`;\n\nexport const Name = styled.p`\n  margin: 0;\n`;\n\nexport const ContainerBtn = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ButtonEdit = styled.button`\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background-color: blue;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  -webkit-box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  -moz-box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  transition: transform 300ms;\n  &:hover,\n  :focus {\n    box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    -webkit-box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    -moz-box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    transition: transform 300ms;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background-color: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  -webkit-box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  -moz-box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  transition: transform 300ms;\n  &:hover,\n  :focus {\n    box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    -webkit-box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    -moz-box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    transition: transform 300ms;\n  }\n`;\n\nexport const DeleteContent = styled.div`\n  width: 18px;\n  height: 3px;\n  background-color: white;\n`;\n","import PropTypes from 'prop-types';\nimport IconEdit from 'components/Icon/IconEdit';\nimport ModalContainer from 'components/ModalContainer/ModalContainer';\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactApi';\n\nimport {\n  Item,\n  Name,\n  ContainerBtn,\n  ButtonEdit,\n  ButtonDelete,\n  DeleteContent,\n} from './ContactItem.styled';\n\nconst ContactItem = ({\n  id,\n  name,\n  number,\n  showModal,\n  setShowModal,\n  contacts,\n}) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const [editContact, setEditContact] = useState('');\n\n  const handleEditContact = () => {\n    const newCont = {\n      name: name,\n      number: number,\n      id: id,\n    };\n\n    setEditContact(newCont);\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Item>\n        <Name>\n          {name}: <span>{number}</span>\n        </Name>\n        <ContainerBtn>\n          <ButtonEdit type=\"button\" onClick={handleEditContact}>\n            <IconEdit\n              style={{\n                display: 'inline-block',\n                width: '18px',\n                height: '18px',\n                stroke: 'currentColor',\n                fill: 'currentColor',\n                border: '1px solid red',\n              }}\n            />\n          </ButtonEdit>\n          <ButtonDelete type=\"button\" onClick={() => deleteContact(id)}>\n            <DeleteContent />\n          </ButtonDelete>\n        </ContainerBtn>\n      </Item>\n      {showModal && editContact.name && (\n        <ModalContainer\n          setShowModal={setShowModal}\n          editContact={editContact}\n          setEditContact={setEditContact}\n          contacts={contacts}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  showModal: PropTypes.bool.isRequired,\n  setShowModal: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\n\nexport const ContainerList = styled(Container)`\n  margin-top: 30px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n","import ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\nimport { ContainerList, List } from './ContactList.styled';\n\nconst ContactList = ({ contacts, showModal, setShowModal }) => {\n  return (\n    <ContainerList>\n      <List>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              contacts={contacts}\n              showModal={showModal}\n              setShowModal={setShowModal}\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            />\n          );\n        })}\n      </List>\n    </ContainerList>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  showModal: PropTypes.bool.isRequired,\n  setShowModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { IoIosSearch } from 'react-icons/io';\n\nimport Form from 'react-bootstrap/Form';\nimport { Container } from 'react-bootstrap';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <Container>\n      <Form.Label>{<IoIosSearch />} Find by name</Form.Label>\n      <Form.Control\n        size=\"lg\"\n        type=\"text\"\n        value={filter}\n        placeholder=\"find contact\"\n        onChange={onChange}\n      />\n    </Container>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\n\nexport const ContainerView = styled(Container)`\n  max-width: 500px;\n  padding: 0 15px;\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 60px;\n  height: 60px;\n  margin: 15px 0 5px;\n  margin-left: auto;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font: inherit;\n  background-color: #4caf50;\n  cursor: pointer;\n  font-size: 50px;\n  padding-bottom: 10px;\n  box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  -webkit-box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  -moz-box-shadow: 1px 3px 6px 1px rgba(0, 0, 0, 0.96);\n  transition: transform 300ms;\n  &:hover,\n  :focus {\n    box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    -webkit-box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    -moz-box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.75);\n    transition: transform 300ms;\n  }\n`;\n","import ContactList from '../components/ContactList/ContactList';\nimport Filter from 'components/Filter';\nimport { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { useFetchContactsQuery } from '../redux/contacts/contactApi';\nimport ModalContainer from '../components/ModalContainer/ModalContainer';\nimport { ContainerView, ButtonAdd } from './ContactsView.styled';\n\nexport default function ContactsView() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [filter, setFilter] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const toggleShowModal = () => setShowModal(!showModal);\n\n  const handleAddContact = () => {\n    toggleShowModal();\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  function getFilterContact() {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  return (\n    <ContainerView>\n      <Container>\n        <ButtonAdd type=\"button\" onClick={handleAddContact}>\n          +\n        </ButtonAdd>\n      </Container>\n      {showModal && (\n        <ModalContainer\n          onClose={toggleShowModal}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          contacts={contacts}\n        />\n      )}\n      <Filter filter={filter} onChange={changeFilter} />\n      {contacts && (\n        <ContactList\n          showModal={showModal}\n          setShowModal={setShowModal}\n          contacts={getFilterContact()}\n        />\n      )}\n    </ContainerView>\n  );\n}\n"],"names":["xmlns","fill","viewBox","strokeWidth","stroke","className","strokeLinecap","strokeLinejoin","d","useState","showA","setShowA","Row","Col","md","Toast","show","onClose","src","alt","ModalAddContactContent","styled","Container","ContactAddForm","contacts","name","setName","number","setNumber","state","setState","useCreateContactMutation","createContact","handleChange","e","target","value","reset","Form","onSubmit","preventDefault","NewContact","normalizedName","toLowerCase","find","contact","controlId","size","type","placeholder","onChange","pattern","title","required","Button","variant","FormEdit","editContact","id","contactName","contactNumber","useEditContactMutation","editContactName","setEditContact","setShowModal","handleClose","Modal","onHide","backdrop","keyboard","closeButton","style","marginLeft","Item","Name","ContainerBtn","ButtonEdit","ButtonDelete","DeleteContent","showModal","useDeleteContactMutation","deleteContact","onClick","display","width","height","border","ContainerList","List","map","filter","ContainerView","ButtonAdd","ContactsView","useFetchContactsQuery","data","setFilter","toggleShowModal","currentTarget","normalizedFilter","includes","getFilterContact"],"sourceRoot":""}